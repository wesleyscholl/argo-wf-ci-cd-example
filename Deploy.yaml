metadata:
  name: a-k8s-cluster-create
  namespace: argo-events
  uid: be3af12d-46f8-4cd3-a367-9bfe13a80d82
  resourceVersion: '2907755'
  generation: 27
  creationTimestamp: '2024-10-21T22:47:20Z'
  labels:
    workflows.argoproj.io/creator: system-serviceaccount-argo-argo-server
  managedFields:
    - manager: argo
      operation: Update
      apiVersion: argoproj.io/v1alpha1
      time: '2024-10-22T15:44:02Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:workflows.argoproj.io/creator: {}
        f:spec: {}
spec:
  templates:
    - name: create-and-interact
      inputs: {}
      outputs: {}
      metadata: {}
      steps:
        - - name: create-cluster
            template: k3d-create-cluster
            arguments: {}
    - name: k3d-create-cluster
      inputs: {}
      outputs: {}
      metadata: {}
      container:
        name: ''
        image: ubuntu:latest
        command:
          - /bin/sh
          - '-c'
        args:
          - >
            apt-get update


            DEBIAN_FRONTEND=noninteractive 


            apt-get install -y curl sudo systemd systemd-sysv dbus udev procps
            cgroup-lite cgroup-tools


            cd /


            mount -t proc proc /proc


            mount -t sysfs sys /sys


            mount -t tmpfs tmp /tmp


            mkdir -p /run/systemd


            mount -t tmpfs run /run


            mkdir -p /run/lock


            curl -sSLf https://get.k0s.sh | sudo sh


            k0s install controller --single --enable-worker --no-taints


            mkdir -p /etc/k0s


            cat > /etc/k0s/k0s.yaml <<EOF

            apiVersion: k0s.k0sproject.io/v1beta1

            kind: ClusterConfig

            metadata:
              name: k0s
            spec:
              api:
                extraArgs:
                  anonymous-auth: "true"
              storage:
                type: etcd
              network:
                provider: calico
              controllerManager: {}
              scheduler: {}
              extensions:
                helm:
                  repositories:
                  - name: stable
                    url: https://charts.helm.sh/stable
              workloadRuntime:
                containerd:
                  configPath: /etc/k0s/containerd.toml
            EOF


            mkdir -p /etc/k0s


            cat > /etc/k0s/containerd.toml <<EOF

            version = 2

            root = "/var/lib/k0s/containerd"

            state = "/run/k0s/containerd"


            [grpc]
              address = "/run/k0s/containerd.sock"

            [plugins."io.containerd.grpc.v1.cri"]
              enable_selinux = false
              sandbox_image = "k8s.gcr.io/pause:3.7"
            EOF


            k0s start


            timeout=300


            echo "Waiting for k0s API server to be ready (timeout:
            ${timeout}s)..."


            start_time=$(date +%s)


            while true; do
              if k0s status 2>/dev/null; then
                echo "k0s API server is ready"
                break
              fi
              
              current_time=$(date +%s)

              elapsed=$((current_time - start_time))

              if [ $elapsed -ge $timeout ]; then
                echo "Timeout waiting for k0s API server"
                exit 1
              fi
              
              echo "Still waiting... (${elapsed}s elapsed)"
              sleep 5
            done


            echo "Waiting for node to be ready..."

            until k0s kubectl get nodes | grep -q " Ready"; do
              sleep 5
            done


            k0s kubectl get nodes


            k0s kubectl get pods -A
        resources:
          requests:
            cpu: '2'
            memory: 4Gi
        volumeMounts:
          - name: systemd
            readOnly: true
            mountPath: /sys/fs/cgroup
          - name: dbus
            mountPath: /var/run/dbus
        securityContext:
          privileged: true
          runAsUser: 0
  entrypoint: create-and-interact
  arguments: {}


